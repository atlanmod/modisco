[comment /*******************************************************************************
 * Copyright (c) 2009 Mia-Software.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Nicolas Payneau (Mia-Software) - initial API and implementation
 *******************************************************************************/]
 
[module generateInitFiles('http://www.eclipse.org/gmt/modisco/workflow')/]

[template public generateInitFiles(w : Workflow, packageBaseRoot: String)]
	[file ('/src/'.concat(packageBaseRoot.substituteAll('.', '/')).concat('/modiscoworks/').concat('Init').concat(w.name.toUpperFirst()).concat('.java'), false)]
package [packageBaseRoot/].modiscoworks;

import java.util.HashMap;
import java.util.Map;
import org.eclipse.gmt.modisco.workflow.modiscoworkflow.WorkParameterValue;

public class Init[w.name.toUpperFirst()/] {

	[for (elmt : Element | w.getAllUnitsOfWork())]
		[if elmt.oclIsTypeOf(Work)]	
	private [elmt.name.toUpperFirst()/] [elmt.name.toLower()/];
		[/if]	
	[/for]

	public Init[w.name.toUpperFirst()/]() {
		[for (elmt : Element |  w.getAllUnitsOfWork())]
			[if elmt.oclIsTypeOf(Work)]	
		this.[elmt.name.trim().toLower()/] = new [elmt.name.trim().toUpperFirst()/]();			
			[/if]	
		[/for]
	}
	
	[for (elmt : Element |  w.getAllUnitsOfWork())]
		[if elmt.oclIsTypeOf(Work)]
	public [elmt.name.trim().toUpperFirst()/] get[elmt.name.trim().toUpperFirst()/](){
		return this.[elmt.name.trim().toLower()/];
	}
		[/if]	
	[/for]
	
	public Map<String, WorkParameterValue> getInputs(){
		Map<String, WorkParameterValue> mapInputs = new HashMap<String, WorkParameterValue>();
		[for (elmt : Element |  w.getAllUnitsOfWork())]
			[if (elmt.index = 0)]
		[elmt.name.trim().toUpperFirst()/] [elmt.name.trim().toLower()/] = get[elmt.name.trim().toUpperFirst()/]();
		mapInputs = [elmt.name.trim().toLower()/].getInputs();
			[/if]
		[/for]
		return mapInputs;
	}
}
	[/file]
[/template]
